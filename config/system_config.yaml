# ─────────────────────────────────────────────────────────────
# File: config/system_config.yaml
# 🚀 CONSOLIDATED SMARTINFOBUS SYSTEM CONFIGURATION
# NASA/MILITARY GRADE - ZERO ERROR TOLERANCE
# Consolidates: orchestration_policy.yaml + module_registry.yaml
# ─────────────────────────────────────────────────────────────

# ═══════════════════════════════════════════════════════════════════
# SYSTEM METADATA
# ═══════════════════════════════════════════════════════════════════
system:
  name: "SmartInfoBus Trading Platform"
  version: "4.0.0"
  description: "Production-grade AI trading system with zero-wiring architecture"
  environment: "production"  # development, testing, production
  deployment_id: "main-001"
  
  # Compliance & Audit
  compliance_mode: true
  audit_trail_enabled: true
  regulatory_standards: ["SOX", "GDPR", "MiFID", "Basel III"]
  
  # System Capabilities
  capabilities:
    - "real_time_trading"
    - "risk_management"
    - "portfolio_optimization"
    - "market_analysis"
    - "explainable_ai"
    - "hot_reload"
    - "state_persistence"
    - "dependency_tracking"

# ═══════════════════════════════════════════════════════════════════
# EXECUTION CONFIGURATION (from orchestration_policy.yaml)
# ═══════════════════════════════════════════════════════════════════
execution:
  
  # Parallel Execution Stages
  parallel_stages:
    - name: "data_preparation"
      description: "Market data ingestion and feature engineering"
      modules: 
        - "AdvancedFeatureEngine"
        - "MarketThemeDetector"
        - "LiquidityHeatmapLayer"
        - "FractalRegimeConfirmation"
      max_parallel: 8
      timeout_ms: 200
      retry_policy: "exponential_backoff"
      
    - name: "market_analysis"
      description: "Technical and fundamental analysis"
      modules:
        - "category:market"
        - "SentimentAnalyzer"
        - "VolatilityPredictor"
        - "TrendAnalyzer"
      max_parallel: 10
      timeout_ms: 300
      dependencies: ["data_preparation"]
      
    - name: "strategy_execution"
      description: "Strategy selection and signal generation"
      modules:
        - "category:strategy"
        - "StrategyGenomePool"
        - "ExplanationGenerator"
        - "MetaRLController"
      max_parallel: 6
      timeout_ms: 500
      dependencies: ["market_analysis"]
      
    - name: "risk_assessment"
      description: "Risk evaluation and position sizing"
      modules:
        - "category:risk"
        - "RiskManager"
        - "PositionSizer"
        - "DrawdownController"
      max_parallel: 4
      timeout_ms: 100
      dependencies: ["strategy_execution"]
      critical: true  # Critical path
      
    - name: "voting_consensus"
      description: "Multi-agent voting and decision consensus"
      modules:
        - "all:voting_members"
        - "ConsensusVoting"
        - "DecisionAggregator"
      max_parallel: 8
      timeout_ms: 150
      dependencies: ["risk_assessment"]
      
    - name: "final_decision"
      description: "Final trade decision and execution"
      modules:
        - "FinalDecisionMaker"
        - "TradeExecutor"
        - "BiasAuditor"
      max_parallel: 2
      timeout_ms: 50
      dependencies: ["voting_consensus"]
      critical: true
  
  # Global Timeouts
  timeouts:
    default_ms: 100
    critical_path_ms: 50
    non_critical_ms: 500
    
    # Module-specific overrides
    by_module:
      MetaRLController: 200
      NeuralMemoryArchitect: 150
      ComplexStrategyAnalyzer: 300
      MarketDataProcessor: 50
      RiskCalculator: 25
      
    # Category-specific defaults
    by_category:
      market: 100
      strategy: 200
      risk: 50
      memory: 150
      voting: 100
      auditing: 25
  
  # Circuit Breakers & Error Handling
  circuit_breakers:
    failure_threshold: 3
    recovery_time_s: 60
    
    # Module-specific thresholds
    module_overrides:
      RiskManager: 1  # Zero tolerance for risk failures
      TradeExecutor: 1
      BiasAuditor: 2
      
    # Cascade prevention
    cascade_protection: true
    isolation_mode: "quarantine"  # quarantine, disable, retry
  
  # Performance & Optimization
  performance:
    enable_caching: true
    cache_ttl_seconds: 300
    enable_predictive_loading: true
    resource_monitoring: true
    auto_scaling: false  # Manual scaling in production
    
    # Memory management
    memory_limits:
      per_module_mb: 500
      total_system_mb: 8192
      garbage_collection_interval_s: 60
    
    # CPU optimization
    cpu_limits:
      max_threads_per_module: 4
      total_worker_threads: 32
      thread_pool_size: 16

# ═══════════════════════════════════════════════════════════════════
# MODULE REGISTRY (from module_registry.yaml)
# ═══════════════════════════════════════════════════════════════════
modules:
  
  # ─────────────────────────────────────────────────────────────
  # MARKET ANALYSIS MODULES
  # ─────────────────────────────────────────────────────────────
  MarketThemeDetector:
    category: "market"
    priority: 100
    provides: ["market_theme", "theme_confidence", "theme_thesis"]
    requires: ["price_data", "volume_data"]
    explainable: true
    hot_reload: true
    critical: false
    timeout_ms: 150
    dependencies: []
    
    config:
      lookback_periods: [5, 10, 20, 50]
      confidence_threshold: 0.7
      theme_categories: ["bullish", "bearish", "ranging", "breakout"]
      
  AdvancedFeatureEngine:
    category: "market"
    priority: 95
    provides: ["technical_features", "feature_importance", "feature_thesis"]
    requires: ["raw_market_data"]
    explainable: true
    hot_reload: true
    critical: true  # Core data provider
    timeout_ms: 100
    
    config:
      feature_sets: ["technical", "statistical", "momentum", "volatility"]
      normalization: "z_score"
      feature_selection: true
      
  LiquidityHeatmapLayer:
    category: "market"
    priority: 85
    provides: ["liquidity_map", "support_resistance", "liquidity_thesis"]
    requires: ["order_book_data", "volume_profile"]
    explainable: true
    hot_reload: true
    timeout_ms: 200
    config:
      hidden_dim: 64
    
  FractalRegimeConfirmation:
    category: "market"
    priority: 80
    provides: ["regime_state", "regime_confidence", "regime_thesis"]
    requires: ["price_data", "volatility_data"]
    explainable: true
    hot_reload: true
    timeout_ms: 300
    
  # ─────────────────────────────────────────────────────────────
  # STRATEGY MODULES
  # ─────────────────────────────────────────────────────────────
  StrategyGenomePool:
    category: "strategy"
    priority: 90
    provides: ["selected_genome", "genome_confidence", "genome_thesis"]
    requires: ["market_features", "regime_state", "performance_metrics"]
    explainable: true
    hot_reload: true
    is_voting_member: true
    timeout_ms: 200
    
    config:
      population_size: 50
      mutation_rate: 0.1
      selection_pressure: 0.7
      genome_types: ["momentum", "mean_reversion", "breakout", "arbitrage"]
      
  MetaRLController:
    category: "strategy"
    priority: 85
    provides: ["rl_action", "q_values", "rl_thesis"]
    requires: ["state_vector", "market_context"]
    explainable: true
    hot_reload: false  # RL models sensitive to reloading
    is_voting_member: true
    timeout_ms: 300
    
    config:
      algorithm: "TD3"  # Twin Delayed DDPG
      learning_rate: 0.0003
      batch_size: 256
      memory_size: 1000000
      
  ExplanationGenerator:
    category: "strategy"
    priority: 70
    provides: ["strategy_explanation", "decision_rationale"]
    requires: ["all_strategy_outputs", "market_context"]
    explainable: true
    hot_reload: true
    timeout_ms: 100
    
  # ─────────────────────────────────────────────────────────────
  # RISK MANAGEMENT MODULES
  # ─────────────────────────────────────────────────────────────
  RiskManager:
    category: "risk"
    priority: 100  # Highest priority
    provides: ["risk_score", "risk_limits", "risk_thesis"]
    requires: ["portfolio_state", "market_volatility", "position_size"]
    explainable: true
    hot_reload: true
    critical: true
    timeout_ms: 50  # Fast execution required
    
    config:
      max_portfolio_risk: 0.02  # 2% portfolio VAR
      max_position_size: 0.1    # 10% max position
      risk_models: ["var", "expected_shortfall", "maximum_drawdown"]
      lookback_days: 252
      
  DrawdownController:
    category: "risk"
    priority: 95
    provides: ["drawdown_limit", "position_adjustment", "drawdown_thesis"]
    requires: ["portfolio_pnl", "historical_performance"]
    explainable: true
    hot_reload: true
    critical: true
    timeout_ms: 25
    
  PositionSizer:
    category: "risk"
    priority: 85
    provides: ["position_size", "kelly_fraction", "sizing_thesis"]
    requires: ["signal_strength", "risk_score", "account_equity"]
    explainable: true
    hot_reload: true
    timeout_ms: 50
    
  # ─────────────────────────────────────────────────────────────
  # MEMORY & LEARNING MODULES
  # ─────────────────────────────────────────────────────────────
  PlaybookMemory:
    category: "memory"
    priority: 75
    provides: ["historical_patterns", "pattern_match", "memory_thesis"]
    requires: ["market_state", "strategy_outcome"]
    explainable: true
    hot_reload: true
    timeout_ms: 150
    config:
      n_themes: 4
    
    config:
      memory_capacity: 10000
      similarity_threshold: 0.8
      pattern_types: ["price_action", "volume_profile", "volatility_regime"]
      
  NeuralMemoryArchitect:
    category: "memory"
    priority: 70
    provides: ["encoded_state", "memory_retrieval", "neural_thesis"]
    requires: ["raw_features", "attention_weights"]
    explainable: false  # Neural networks less explainable
    hot_reload: false   # Neural models sensitive
    timeout_ms: 200
    
  # ─────────────────────────────────────────────────────────────
  # VOTING & CONSENSUS MODULES
  # ─────────────────────────────────────────────────────────────
  ConsensusVoting:
    category: "voting"
    priority: 80
    provides: ["consensus_decision", "vote_weights", "consensus_thesis"]
    requires: ["all_voting_outputs"]
    explainable: true
    hot_reload: true
    timeout_ms: 100
    config:
      enable_error_pinpointing: true
  MultiScaleFeatureEngine:
    category: "market"
    priority: 80
    provides: ["multi_scale_features", "feature_importance"]
    requires: ["raw_market_data"]
    explainable: true
    hot_reload: true
    timeout_ms: 120
    config:
      enable_error_pinpointing: true

  NewsSentimentModule:
    category: "market"
    priority: 70
    provides: ["news_sentiment", "sentiment_score"]
    requires: ["news_data"]
    explainable: true
    hot_reload: true
    timeout_ms: 80
    config:
      circuit_breaker_threshold: 3

  RegimePerformanceMatrix:
    category: "market"
    priority: 60
    provides: ["regime_performance", "performance_matrix"]
    requires: ["regime_state", "performance_data"]
    explainable: true
    hot_reload: true
    timeout_ms: 100
    config:
      n_regimes: 3

  TimeAwareRiskScaling:
    category: "risk"
    priority: 70
    provides: ["risk_scaling", "scaled_risk"]
    requires: ["risk_score", "volatility_data"]
    explainable: true
    hot_reload: true
    timeout_ms: 60
    config:
      vol_window: 20

  HistoricalReplayAnalyzer:
    category: "memory"
    priority: 60
    provides: ["replay_analysis", "historical_patterns"]
    requires: ["historical_data"]
    explainable: true
    hot_reload: true
    timeout_ms: 120
    config:
      circuit_breaker_threshold: 3

  MemoryBudgetOptimizer:
    category: "memory"
    priority: 55
    provides: ["memory_budget", "optimized_memory"]
    requires: ["memory_usage"]
    explainable: true
    hot_reload: true
    timeout_ms: 100
    config:
      circuit_breaker_threshold: 3

  MemoryCompressor:
    category: "memory"
    priority: 50
    provides: ["compressed_memory", "compression_ratio"]
    requires: ["memory_data"]
    explainable: true
    hot_reload: true
    timeout_ms: 80
    config:
      circuit_breaker_threshold: 3

  MistakeMemory:
    category: "memory"
    priority: 45
    provides: ["mistake_patterns", "mistake_thesis"]
    requires: ["error_data"]
    explainable: true
    hot_reload: true
    timeout_ms: 60
    config:
      circuit_breaker_threshold: 3

  NeuralMemoryArchitect:
    category: "memory"
    priority: 70
    provides: ["encoded_state", "memory_retrieval", "neural_thesis"]
    requires: ["raw_features", "attention_weights"]
    explainable: false
    hot_reload: false
    timeout_ms: 200
    config:
      circuit_breaker_threshold: 3

  PlaybookMemory:
    category: "memory"
    priority: 75
    provides: ["historical_patterns", "pattern_match", "memory_thesis"]
    requires: ["market_state", "strategy_outcome"]
    explainable: true
    hot_reload: true
    timeout_ms: 150
    config:
      circuit_breaker_threshold: 3

  MetaCognitivePlanner:
    category: "meta"
    priority: 60
    provides: ["meta_plan", "cognitive_thesis"]
    requires: ["strategy_outputs"]
    explainable: true
    hot_reload: true
    timeout_ms: 100
    config:
      circuit_breaker_threshold: 3

  PPOLagAgent:
    category: "meta"
    priority: 55
    provides: ["ppo_lag_action", "lag_thesis"]
    requires: ["state_vector", "market_context"]
    explainable: true
    hot_reload: true
    timeout_ms: 120
    config:
      circuit_breaker_threshold: 3

  RiskAdjustedReward:
    category: "reward"
    priority: 50
    provides: ["adjusted_reward", "reward_thesis"]
    requires: ["raw_reward", "risk_score"]
    explainable: true
    hot_reload: true
    timeout_ms: 80
    config:
      circuit_breaker_threshold: 3
    
    config:
      voting_method: "weighted_majority"
      minimum_consensus: 0.6
      weight_decay: 0.95  # Recent performance weighted higher
      
  DecisionAggregator:
    category: "voting"
    priority: 75
    provides: ["final_signal", "confidence_score", "aggregation_thesis"]
    requires: ["consensus_decision", "risk_approval"]
    explainable: true
    hot_reload: true
    timeout_ms: 50
    
  # ─────────────────────────────────────────────────────────────
  # AUDITING & COMPLIANCE MODULES
  # ─────────────────────────────────────────────────────────────
  BiasAuditor:
    category: "auditing"
    priority: 90
    provides: ["bias_score", "bias_flags", "audit_thesis"]
    requires: ["decision_history", "market_outcomes"]
    explainable: true
    hot_reload: true
    critical: true  # Regulatory compliance
    timeout_ms: 75
    
    config:
      bias_types: ["confirmation", "anchoring", "recency", "overconfidence"]
      detection_window: 100  # trades
      significance_threshold: 0.05
      
  ComplianceMonitor:
    category: "auditing"
    priority: 85
    provides: ["compliance_status", "violations", "compliance_thesis"]
    requires: ["trade_decisions", "risk_metrics", "position_limits"]
    explainable: true
    hot_reload: true
    critical: true
    timeout_ms: 50
    
  # ─────────────────────────────────────────────────────────────
  # EXECUTION MODULES
  # ─────────────────────────────────────────────────────────────
  FinalDecisionMaker:
    category: "execution"
    priority: 100
    provides: ["trade_decision", "execution_params", "decision_thesis"]
    requires: ["aggregated_signal", "risk_approval", "compliance_approval"]
    explainable: true
    hot_reload: true
    critical: true
    timeout_ms: 25
    
  TradeExecutor:
    category: "execution"
    priority: 95
    provides: ["execution_status", "fill_price", "execution_thesis"]
    requires: ["trade_decision", "market_conditions"]
    explainable: true
    hot_reload: false  # Live trading sensitive
    critical: true
    timeout_ms: 100

# ═══════════════════════════════════════════════════════════════════
# MONITORING & OBSERVABILITY
# ═══════════════════════════════════════════════════════════════════
monitoring:
  enabled: true
  real_time: true
  
  # Performance Tracking
  performance_tracking:
    enabled: true
    detailed_profiling: false  # Disable in production for performance
    memory_tracking: true
    latency_tracking: true
    throughput_tracking: true
    
    # Alert thresholds
    alerts:
      latency_warning_ms: 150
      latency_critical_ms: 500
      error_rate_warning: 0.05
      error_rate_critical: 0.15
      memory_warning_mb: 6144
      memory_critical_mb: 7680
  
  # Health Monitoring
  health_monitoring:
    enabled: true
    check_interval_s: 5
    system_resources: true
    module_health: true
    dependency_health: true
    
    # Health thresholds
    thresholds:
      cpu_warning: 70
      cpu_critical: 90
      memory_warning: 80
      memory_critical: 95
      disk_warning: 85
      disk_critical: 95
  
  # Dependency Tracking
  dependency_tracking:
    enabled: true
    graph_cache_ttl_s: 30
    circular_dependency_detection: true
    bottleneck_detection: true
    
# ═══════════════════════════════════════════════════════════════════
# SMARTINFOBUS CONFIGURATION
# ═══════════════════════════════════════════════════════════════════
smart_info_bus:
  
  # Core Settings
  max_history: 10000
  performance_tracking: true
  audit_enabled: true
  cache_enabled: true
  
  # Event Logging
  event_logging:
    enabled: true
    max_events: 50000
    log_level: "INFO"
    include_thesis: true
    include_metadata: true
    
  # Data Integrity
  data_integrity:
    validation_enabled: true
    checksum_verification: true
    tamper_detection: true
    encryption: false  # Enable in high-security environments
    
  # Circuit Breakers
  circuit_breakers:
    enabled: true
    failure_threshold: 3
    recovery_time_s: 60
    cascade_protection: true

# ═══════════════════════════════════════════════════════════════════
# STATE PERSISTENCE
# ═══════════════════════════════════════════════════════════════════
persistence:
  enabled: true
  
  # State Management
  state_management:
    auto_save_interval_s: 300  # 5 minutes
    save_on_shutdown: true
    load_on_startup: true
    validation_enabled: true
    
  # Checkpoints
  checkpoints:
    enabled: true
    interval_minutes: 60
    max_checkpoints: 24  # 24 hours of hourly checkpoints
    compression: true
    
  # Session Replay
  session_replay:
    enabled: true
    max_sessions: 100
    include_full_state: false  # Performance consideration
    
  # Storage
  storage:
    base_directory: "data/persistence"
    state_format: "pickle"  # pickle, json
    compression_format: "gzip"
    backup_enabled: true

# ═══════════════════════════════════════════════════════════════════
# HOT RELOAD SYSTEM
# ═══════════════════════════════════════════════════════════════════
hot_reload:
  enabled: true
  
  # File Watching
  file_watching:
    enabled: true
    watch_directories: 
      - "modules/"
      - "config/"
    ignore_patterns:
      - "*.pyc"
      - "__pycache__"
      - "*.log"
    
  # Reload Strategy
  reload_strategy:
    preserve_state: true
    validate_before_reload: true
    rollback_on_failure: true
    notification_enabled: true
    
  # Safety Checks
  safety_checks:
    syntax_validation: true
    dependency_validation: true
    test_execution: false  # Run tests before reload
    backup_before_reload: true

# ═══════════════════════════════════════════════════════════════════
# LOGGING & AUDIT
# ═══════════════════════════════════════════════════════════════════
logging:
  
  # General Logging
  level: "INFO"  # DEBUG, INFO, WARNING, ERROR, CRITICAL
  format: "structured"  # structured, plain
  
  # File Rotation
  rotation:
    max_file_size_mb: 100
    max_files: 10
    rotation_interval_hours: 24
    
  # Audit Logging
  audit:
    enabled: true
    level: "INFO"
    separate_file: true
    include_stack_trace: true
    include_user_context: true
    retention_days: 2555  # 7 years for compliance
    
  # Performance Logging
  performance:
    enabled: true
    log_slow_operations: true
    slow_threshold_ms: 500
    include_profiling: false

# ═══════════════════════════════════════════════════════════════════
# DEVELOPMENT & TESTING
# ═══════════════════════════════════════════════════════════════════
development:
  
  # Debug Features
  debug_mode: false
  verbose_logging: false
  trace_execution: false
  
  # Testing
  testing:
    mock_market_data: false
    simulation_mode: false
    paper_trading: false
    test_data_directory: "data/test"
    
  # Development Tools
  dev_tools:
    enable_repl: false
    enable_debugger: false
    enable_profiler: false
    hot_reload_aggressive: false

# ═══════════════════════════════════════════════════════════════════
# SECURITY
# ═══════════════════════════════════════════════════════════════════
security:
  
  # Access Control
  access_control:
    enabled: false  # Enable in production with authentication
    require_api_key: false
    require_encryption: false
    
  # Data Protection
  data_protection:
    encrypt_sensitive_data: false
    mask_credentials: true
    secure_communication: false
    
  # Audit Security
  audit_security:
    log_access_attempts: true
    detect_anomalies: true
    alert_on_failures: true

# ═══════════════════════════════════════════════════════════════════
# INTEGRATION SETTINGS
# ═══════════════════════════════════════════════════════════════════
integration:
  
  # External Systems
  external_systems:
    market_data_provider: "internal"
    execution_venue: "simulation" 
    risk_system: "internal"
    
  # API Configuration
  api:
    enabled: true
    port: 8000
    host: "localhost"
    cors_enabled: true
    rate_limiting: true
    
  # Webhooks
  webhooks:
    enabled: false
    endpoints: []
    
# ═══════════════════════════════════════════════════════════════════
# VERSION & COMPATIBILITY
# ═══════════════════════════════════════════════════════════════════
compatibility:
  min_python_version: "3.9"
  max_python_version: "3.12"
  
  # Required Dependencies
  required_packages:
    - "numpy>=1.21.0"
    - "pandas>=1.3.0"
    - "scikit-learn>=1.0.0"
    - "pyyaml>=5.4.0"
    - "psutil>=5.8.0"
    - "networkx>=2.6.0"
    
  # Optional Dependencies
  optional_packages:
    - "torch>=1.9.0"
    - "tensorflow>=2.6.0"
    - "matplotlib>=3.4.0"
    - "plotly>=5.0.0"

# ═══════════════════════════════════════════════════════════════════
# METADATA & DOCUMENTATION
# ═══════════════════════════════════════════════════════════════════
metadata:
  created_by: "SmartInfoBus Architecture Team"
  created_date: "2024-01-15"
  last_modified: "2024-01-15"
  version: "1.0.0"
  
  documentation:
    config_guide: "docs/configuration.md"
    module_guide: "docs/modules.md"
    deployment_guide: "docs/deployment.md"
    troubleshooting: "docs/troubleshooting.md"
    
  contact:
    support_email: "support@smartinfobus.ai"
    documentation_url: "https://docs.smartinfobus.ai"
    repository_url: "https://github.com/smartinfobus/platform"